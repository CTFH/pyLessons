* dcf1ce7  (HEAD -> dev) 2022-01-18 cf c7_1を移動
* f7f3cac  (origin/master, master) 2022-01-17 cf ex追加
* 0161173  2022-01-14 cf c6_8 c6_9追加　関数に渡すと内容書き換え（参照）　防御的コピー
* 7a8ec6a  2022-01-14 cf c6_6追加 等価と等値（同一存在）
* 8aac6bc  2022-01-14 cf c6_5追加Pythonでのクラス
* 1169cdb  2022-01-14 cf col1.py追加
* 44339c1  2022-01-14 cf c6_3追加
* 011fe32  2022-01-13 cf listEx.py追加
* 1599b80  2022-01-11 cf ex追加
* b4afd06  2022-01-11 cf global変数について
* 0ae54b3  2022-01-11 cf col1追加 引数にdictionaryを受け取る関数の作成 通常の引数でのdictの受け渡しも追記
* b31d482  2022-01-07 cf ex追加
* 0a7a1f4  2022-01-07 cf c5_22,c5_24,c5_29追加 デフォルト引数、キーワード引数、可変長引数
* 25fb7b0  2022-01-07 cf c5_18.py タプルの戻り値とアンパック代入
* 75d0a55  2022-01-07 cf c5_16追加 メソッドを使用した得点処理
* 614a1d6  2022-01-07 cf c5_7追加 関数の定義と実行
* 0c972ab  2022-01-07 cf c5_3追加 関数の基礎
* 3187291  2022-01-07 cf 編集
* 257a007  2022-01-06 cf ex追加
* d6ffe87  2022-01-06 cf c4_11追加 continueでループを１回スキップすることができる isinstance(対象, 型)で対象がその型なのかを判定できる
* f838796  2022-01-06 cf c4_10追加 breakを使うと直近のループを抜ける Javaもjsも同じ
* 48585fd  2022-01-06 cf c4_8追加 回数だけに興味があるforループにはrange()関数を使う
* 259c6b4  2022-01-06 cf c4_7追加 リストとfor文 Javaの拡張for文 for(int data : scores){] と考え方が似ている
* 64c4805  2022-01-06 cf c4_6追加 while文によるリストの走査
* 31fcc48  2022-01-06 cf c4_5追加 while文とリスト
* 77e0ffe  2022-01-06 cf c4_2追加 while文の基礎
* f6a73a7  2022-01-06 cf ex3_3.col1追加 if文演習、３項演算子
* 2208d3c  2022-01-06 cf c3_10追加 ネストしたif文演習
* 74c7924  2022-01-06 cf c3_9追加 ||はor else if はelifなど微妙な差があるので注意
* b09c254  2021-12-29 cf HW追加
* b024e27  2021-12-28 cf 演習問題追加
* ae45a1e  2021-12-28 cf ccol3追加 pythonは変数の挟み込みOK 60 <= score <= 100
* 3e687e8  2021-12-28 cf ccol2追加 not で意味を反転 if not a in b: if a not in b: は同意
* 0da83d5  2021-12-28 cf c3_7追加 条件式の評価結果真偽値(true,falseのいずれかに置き換わる)
* 957dbf4  2021-12-28 cf c3_4追加 inの使い方
* 7eeb4c7  2021-12-28 cf c3_2追加 if文基礎
* 1aa1400  2021-12-28 cf ccol追加 Pythonの改行について
* 9d8c040  2021-12-28 cf ex2_2変更 JSだった場合の処理追加
* 39ba33d  2021-12-28 cf 12/27
* e596ac4  2021-12-27 cf c2_28追加 4つの集合演算
* 783fc1a  2021-12-27 cf c2_27追加 セットの積集合
* f63dd9e  2021-12-27 cf c2_26.py追加 ２次元リスト
* 319f84e  2021-12-27 cf c2_25追加 dictionaryの中にセットをネスト
* 4168553  2021-12-27 cf c2_24 追加 dictionaryのネスト
* ed18e78  2021-12-27 cf コレクションの相互変換
* 273ee19  2021-12-27 cf 2_22追加 セットの利用
* 9baf384  2021-12-27 cf c2_21に追記
* 46a9025  2021-12-27 cf c2_21追加 要素数１のタプルc2_21追加 要素数１のタプル
* 6537ab0  2021-12-27 cf c2_17.py追加 タプルは要素の変更ができないことを確認
* 8a67ff8  2021-12-27 cf c2_16col追加 dictionaryのvalueの合計の求め方
* 9b8a408  2021-12-27 cf c2_15,c2_16 追加　 dictionaryの要素の参照と削除
* 30f2b14  2021-12-27 cf c2_13修正
* 9a3c6ea  2021-12-27 cf c2_13追加
* 6e0a020  2021-12-24 cf rand.py とdog.pyを作成 random関数と問題演習（犬の年齢と文字逆）
* dda4bb7  2021-12-24 cf c2_11追加 スライス表現や負のインデックスについて
* 844dafc  2021-12-24 cf c2_2追加 リストの基本
* 30effec  2021-12-24 cf c1_22作成 文字列の中に値を埋め込む　fString
* de4c7a7  2021-12-24 cf c1_19追加 型変換の練習
* 219012c  2021-12-24 cf c1_17 作成 type()を使っての型の確認
* 030b3ea  2021-12-24 cf c1_15.py 追加 割り勘プログラム。形違いのエラーを体験＆修正
* a4f7ed4  2021-12-24 cf 1_14.py と　C1_14.java作成 キーボードからの入力
* b4e1c8c  2021-12-24 cf c1_10,と c1_12追加 アンパック代入と自己代入
* c3a9e8f  2021-12-23 cf c1_9 変数の再代入について　 変数の予約後について
* 6c4a8bc  2021-12-23 cf c1_8追加 変数の使いまわしについて学習
* 46cb7e4  2021-12-23 cf c1_7
* 708b382  2021-12-23 cf c1_5.py作成
* a964322  2021-12-23 cf c1_3
* 93f1166  2021-12-23 cf c1_2変更
* 75edcef  2021-12-23 cf c1_1.py
* c1f347d  2021-12-23 cf code1_1作成
